{"version":3,"sources":["components/Header.js","components/Intro.js","components/FindKey.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","className","icon","faKey","directionStyle","chordButtonBank","Intro","useState","selectedCrdTyp","setSelectedCrdType","updateChordTypeState","e","target","innerHTML","useEffect","chordTypeButtons","document","getElementsByClassName","forEach","x","indexOf","classList","add","remove","clickityClackCB","elem","activeClass","contains","onClick","map","href","chordSection","buttonsContainer","FindKey","startChordIndex","selectedChords","setSelectedChords","foundKeys","setFoundKeys","selectedChordGrp","setSelectedChordGrp","baseChords","majorChords","minorChords","dimChords","basesForKeys","computeMinorKeys","keys","i","length","push","chordSwapButtons","buttons","toggleSelectedChord","el","chordName","arrCopy","filter","buttonsArray","buttonsCode","code","c","selectedChordButtons","setSelectedGroup","foundKeyTags","renderChordGroup","potentialKeys","every","chordButtons","querySelectorAll","button","iconClass","Footer","rel","faGithub","faLinkedin","faTwitter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.552f749f.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faKey } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Header = () => {\n  return (\n    <div\n      id=\"headerContainer\"\n      className=\" flex px-16 justify-between items-center max-w-7xl my-0 mx-auto py-3 bThree:px-8\"\n    >\n      <div id=\"logoContainer\" className=\"flex items-center mr-4\">\n        <FontAwesomeIcon icon={faKey} className=\"text-2xl text-yellow-400\" />\n        <h1 className=\"font-zilla text-white text-3xl ml-2\">Keys</h1>\n      </div>\n      <hr className=\"border-yellow-400 border-2 rounded-full w-full\" />\n    </div>\n  );\n};\n\nexport default Header;\n","import { useEffect, useState } from \"react\";\n\nconst directionStyle = `mb-4 text-white text-center`;\nconst chordButtonBank = [\"C Major\", \"A Minor\", \"B Dim\"];\nconst chordButton = `transform hover:scale-110 active:scale-95 text-yellow-400 m-4 border-2 border-yellow-400 p-2 rounded-md w-32 transition-all bTwo:text-sm bTwo:w-20`;\n\nconst Intro = () => {\n  const [selectedCrdTyp, setSelectedCrdType] = useState([]);\n\n  //handles chordType example selections\n  const updateChordTypeState = (e) => {\n    setSelectedCrdType([e.target.innerHTML]);\n  };\n\n  useEffect(() => {\n    let chordTypeButtons = document.getElementsByClassName(\"chord-type\");\n    [...chordTypeButtons].forEach((x) => {\n      selectedCrdTyp.indexOf(x.innerHTML) !== -1\n        ? x.classList.add(\"text-yellow-400\", \"italic\")\n        : x.classList.remove(\"text-yellow-400\", \"italic\");\n    });\n  }, [selectedCrdTyp]);\n\n  //handle chord buttons\n  const clickityClackCB = (e) => {\n    let elem = e.target.classList;\n    let activeClass = [\"bg-yellow-400\", \"text-white\", \"im-active\"];\n    if (elem.contains(\"im-active\")) {\n      elem.remove(...activeClass);\n      elem.add(\"text-yellow-400\");\n    } else {\n      elem.remove(\"text-yellow-400\");\n      elem.add(\"im-active\", ...activeClass);\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-16 h-screenMinusHeader bFive:h-auto bFive:px-6\">\n      <div id=\"inner\" className=\"flex flex-col h-full justify-evenly\">\n        <p className=\"font-zilla text-white text-5xl bOne:text-center bOne:text-4xl bTwo:text-3xl bFive:mb-8 bFive:mt-4\">\n          Unlock your music... with <span className=\"text-yellow-400\">Keys</span>!\n        </p>\n        <div id=\"center\" className=\"self-center bFive:self-auto\">\n          <p className=\"mb-4 text-3xl font-zilla text-yellow-400 bOne:text-2xl bTwo:text-xl\">How to use...</p>\n          <div className=\"\">\n            <p className={directionStyle}>Choose between chord types.</p>\n            <div\n              id=\"chordSwapContainer\"\n              className=\"flex items-center shadow-introFlow bg-gray-700 p-5 rounded text-white bTwo:p-3 bTwo:text-sm bFive:flex-col\"\n            >\n              <button onClick={updateChordTypeState} className=\"chord-type mx-4\">\n                Major Chords\n              </button>\n              <hr className=\"border-2 w-20 rounded-3xl border-gray-600 bThree:w-5 bFive:hidden\" />\n              <button onClick={updateChordTypeState} className=\"chord-type mx-4 bFive:my-4\">\n                Minor Chords\n              </button>\n              <hr className=\"border-2 w-20 rounded-3xl border-gray-600 bThree:w-5 bFive:hidden\" />\n              <button onClick={updateChordTypeState} className=\"chord-type mx-4\">\n                Diminished Chords\n              </button>\n            </div>\n            <p className={`${directionStyle} mt-8`}>Pick your chords.</p>\n            <div className=\"flex justify-center shadow-introFlow bg-gray-700 rounded bFive:flex-col bFive:items-center\">\n              {chordButtonBank.map((x) => (\n                <button onClick={clickityClackCB} key={x} className={chordButton}>\n                  {x}\n                </button>\n              ))}\n            </div>\n            <p className={`${directionStyle} mt-8`}>Click the Find Key button.</p>\n            <div className=\"flex justify-center shadow-introFlow bg-gray-700 p-3 rounded\">\n              <button className=\"border-2 rounded p-2 transition-all w-24 border-green-400 text-green-400 hover:shadow-greenGlow bTwo:w-20 bTwo:text-sm\">\n                Find Key\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex justify-end bOne:justify-center\">\n          <a\n            className=\"font-zilla text-white text-3xl hover:underline bOne:text-2xl bTwo:text-xl bThree:text-lg bFive:mt-8\"\n            href=\"#findKeyContainer\"\n          >\n            Click here to get started.\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Intro;\n","import React, { useEffect, useState } from \"react\";\n\n// repeated styles\nconst chordSection = `max-w-2xl my-8`;\nconst buttonsContainer = `p-4 rounded-lg bg-gray-900 flex flex-wrap justify-center`;\nconst chordButton = `transform hover:scale-110 active:scale-95 text-yellow-400 m-4 border-2 border-yellow-400 p-2 rounded-md w-32 transition-all bTwo:w-20 bFour:text-xs bFour:m-3`;\n\nconst FindKey = () => {\n  //state\n  const [selectedChords, setSelectedChords] = useState([]);\n  const [foundKeys, setFoundKeys] = useState([]);\n  const [selectedChordGrp, setSelectedChordGrp] = useState(\"Major Chords\");\n\n  const returnNada = () => null;\n\n  //chord arrays\n  const baseChords = [\"A\", \"A#/Bb\", \"B\", \"C\", \"C#/Db\", \"D\", \"D#/Eb\", \"E\", \"F\", \"F#/Gb\", \"G\", \"G#/Ab\"];\n  const majorChords = baseChords.map((x) => x + \" Major\");\n  const minorChords = baseChords.map((x) => x + \" Minor\");\n  const dimChords = baseChords.map((x) => x + \" Dim\");\n\n  const basesForKeys = [\n    \"A\",\n    \"A#/Bb\",\n    \"B\",\n    \"C\",\n    \"C#/Db\",\n    \"D\",\n    \"D#/Eb\",\n    \"E\",\n    \"F\",\n    \"F#/Gb\",\n    \"G\",\n    \"G#/Ab\",\n    \"A\",\n    \"A#/Bb\",\n    \"B\",\n    \"C\",\n    \"C#/Db\",\n    \"D\",\n    \"D#/Eb\",\n    \"E\",\n    \"F\",\n    \"F#/Gb\",\n    \"G\",\n    \"G#/Ab\",\n  ];\n\n  //function to compute all major keys given index of first note\n  const computeMajorKeys = (startChordIndex) => {\n    let theOne = basesForKeys[startChordIndex] + \" Major\";\n    let theTwo = basesForKeys[startChordIndex + 2] + \" Minor\";\n    let theThree = basesForKeys[startChordIndex + 4] + \" Minor\";\n    let theFour = basesForKeys[startChordIndex + 5] + \" Major\";\n    let theFive = basesForKeys[startChordIndex + 7] + \" Major\";\n    let theSix = basesForKeys[startChordIndex + 9] + \" Minor\";\n    let theSeven = basesForKeys[startChordIndex + 11] + \" Dim\";\n    return [theOne, theTwo, theThree, theFour, theFive, theSix, theSeven];\n  };\n\n  //function to compute all minor keys given index of first note\n  const computeMinorKeys = (startChordIndex) => {\n    let theOne = basesForKeys[startChordIndex] + \" Minor\";\n    let theTwo = basesForKeys[startChordIndex + 2] + \" Dim\";\n    let theThree = basesForKeys[startChordIndex + 3] + \" Major\";\n    let theFour = basesForKeys[startChordIndex + 5] + \" Minor\";\n    let theFive = basesForKeys[startChordIndex + 7] + \" Minor\";\n    let theSix = basesForKeys[startChordIndex + 8] + \" Major\";\n    let theSeven = basesForKeys[startChordIndex + 10] + \" Major\";\n    return [theOne, theTwo, theThree, theFour, theFive, theSix, theSeven];\n  };\n\n  //computes all keys and their respective chords and pushes to the keys array\n  let keys = [];\n\n  for (let i = 0; i < baseChords.length; i++) {\n    keys.push([baseChords[i] + \" Major\", computeMajorKeys(i)]);\n    keys.push([baseChords[i] + \" Minor\", computeMinorKeys(i)]);\n  }\n\n  //compares values in chordSelection to the musical keys in the key array\n  const findKeys = () => {\n    let potentialKeys = [];\n    for (let i = 0; i < keys.length; i++) {\n      let newKey = selectedChords.every((x) => keys[i][1].indexOf(x) !== -1);\n      newKey ? potentialKeys.push(keys[i][0]) : returnNada();\n    }\n    if (!potentialKeys.length) {\n      potentialKeys.push(\"No compatible keys found.\");\n    }\n    setFoundKeys(potentialKeys);\n  };\n\n  //updates chordswap button style\n  let chordSwapButtons = document.getElementsByClassName(\"chord-swap-button\");\n  [...chordSwapButtons].forEach((x) => {\n    if (selectedChordGrp.indexOf(x.innerHTML) !== -1) {\n      x.classList.add(\"text-yellow-400\", \"italic\");\n    } else {\n      x.classList.remove(\"text-yellow-400\", \"italic\");\n    }\n  });\n\n  // adds active class to chord buttons on click of chordswap category\n  useEffect(() => {\n    let buttons = document.getElementsByClassName(\"cb-selector\");\n    [...buttons].forEach((x) => {\n      if (selectedChords.indexOf(x.innerHTML) !== -1) {\n        x.classList.remove(\"text-yellow-400\");\n        x.classList.add(\"bg-yellow-400\", \"text-white\");\n      }\n    });\n  }, [selectedChordGrp, selectedChords]);\n\n  //toggles chord to be selected or removed from selected\n  const toggleSelectedChord = (el) => {\n    let chordName = el.target.innerHTML;\n    let arrCopy = [...selectedChords];\n    let selectIndex = arrCopy.indexOf(chordName);\n\n    if (selectIndex === -1) {\n      setSelectedChords([...arrCopy, chordName]);\n      el.target.classList.remove(\"text-yellow-400\");\n      el.target.classList.add(\"bg-yellow-400\", \"text-white\");\n    } else {\n      setSelectedChords(arrCopy.filter((x) => x !== chordName));\n      el.target.classList.remove(\"bg-yellow-400\");\n      el.target.classList.add(\"text-yellow-400\");\n    }\n  };\n\n  // resets selected chords and active classes\n  const resetSelected = () => {\n    let chordButtons = document.querySelectorAll(\".cb-selector\");\n    for (const button of chordButtons) {\n      button.classList.remove(\"bg-yellow-400\");\n      button.classList.add(\"text-yellow-400\");\n    }\n    setSelectedChords([]);\n    setFoundKeys([]);\n  };\n\n  //array that store chord button elements\n  let buttonsArray = [majorChords, minorChords, dimChords];\n  let buttonsCode = [];\n\n  for (let i = 0; i < buttonsArray.length; i++) {\n    let code = buttonsArray[i].map((c) => (\n      <button onClick={toggleSelectedChord} key={c} className={`${chordButton} cb-selector`}>\n        {c}\n      </button>\n    ));\n    buttonsCode.push(code);\n  }\n\n  //generates buttons based on selectedChords state\n  const selectedChordButtons = selectedChords.map((c) => (\n    <p key={c} className=\"pointer-events-none bg-gray-900 text-white m-4 rounded-md transition-all hover:text-white\">\n      {c}\n    </p>\n  ));\n\n  //updates selectedChordGroup state on click of chordSwap buttons\n  const setSelectedGroup = (el) => {\n    setSelectedChordGrp(el.target.innerHTML);\n  };\n\n  //switch case to determine which chord group to render\n  let renderChordGroup = () => {\n    switch (selectedChordGrp) {\n      case \"Major Chords\":\n        return buttonsCode[0];\n      case \"Minor Chords\":\n        return buttonsCode[1];\n      case \"Diminished Chords\":\n        return buttonsCode[2];\n      default:\n        return buttonsCode[0];\n    }\n  };\n\n  //variable that stores mapped p tags for foundKeys\n  let foundKeyTags = foundKeys.map((x) => (\n    <p className=\"inline-block mx-2 text-white\" key={x}>\n      {x}\n    </p>\n  ));\n\n  return (\n    <div\n      id=\"findKeyContainer\"\n      className=\"flex flex-col max-w-7xl items-center mx-auto bOne:mx-16 bTwo:mx-8 bTwo:text-sm\"\n    >\n      {/* chords for selection */}\n      <section id=\"chordChoices\" className={chordSection}>\n        <div\n          id=\"chordSwapContainer\"\n          className=\"flex justify-between items-center text-white mb-4 whitespace-nowrap bFour:whitespace-normal\"\n        >\n          <button className=\"chord-swap-button text-yellow-400 italic mr-4\" onClick={setSelectedGroup}>\n            Major Chords\n          </button>\n          <hr className=\"border-2 w-full rounded-3xl border-gray-600\" />\n          <button className=\"chord-swap-button mx-4\" onClick={setSelectedGroup}>\n            Minor Chords\n          </button>\n          <hr className=\"border-2 w-full rounded-3xl border-gray-600\" />\n          <button className=\"chord-swap-button ml-4\" onClick={setSelectedGroup}>\n            Diminished Chords\n          </button>\n        </div>\n        <div id=\"chordBank\" className={buttonsContainer}>\n          {renderChordGroup()}\n        </div>\n      </section>\n\n      {/* selected chords */}\n      <section className={`${chordSection} w-full`}>\n        <p className=\"text-white mb-4\">Selected Chords</p>\n        <div id=\"selectedChords\" className={`${buttonsContainer} py-5 min-h-40 items-center`}>\n          {selectedChords.length ? (\n            selectedChordButtons\n          ) : (\n            <p className=\"text-gray-400\">Select some chords, my friend.</p>\n          )}\n        </div>\n        <div id=\"selectedSectionButtons\" className=\"flex justify-center\">\n          <button\n            onClick={findKeys}\n            className={`${\n              selectedChords.length\n                ? \"border-green-400 text-green-400 hover:shadow-greenGlow\"\n                : \"border-gray-600 text-gray-600 pointer-events-none\"\n            } border-2 rounded p-2 transition-all self-end mt-4 mr-4 w-24`}\n          >\n            Find Key\n          </button>\n          <button\n            onClick={resetSelected}\n            className={`${\n              selectedChords.length\n                ? \"border-red-500 text-red-500 hover:shadow-redGlow\"\n                : \"border-gray-600 text-gray-600 pointer-events-none\"\n            } border-2 rounded p-2 transition-all self-end mt-4 ml-4 w-24`}\n          >\n            Reset\n          </button>\n        </div>\n      </section>\n\n      {/* found key section */}\n      <section id=\"foundKeySection\" className=\"w-full max-w-2xl mt-8 mb-16\">\n        <p className=\"text-white mb-4\">Compatible Keys</p>\n        <hr className=\"border-gray-600 border-2 rounded-full\" />\n        <div id=\"displayCompatKeysContainer\" className=\"mt-4 text-center\">\n          {foundKeyTags.length ? (\n            foundKeyTags\n          ) : (\n            <p className=\"text-gray-400\">Press 'Find Keys' to display compatible keys.</p>\n          )}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default FindKey;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedin, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nconst iconClass = \"text-2xl text-gray-400 hover:text-yellow-400 transition-all bSix:text-xl\";\n\nconst Footer = () => {\n  return (\n    <div id=\"footerContainer\" className=\"px-16 py-8 flex justify-center\">\n      <div id=\"iconContainer\" className=\"\">\n        <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/jacoberick\" className={iconClass}>\n          <FontAwesomeIcon icon={faGithub} />\n        </a>\n        <a\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href=\"https://www.linkedin.com/in/jacob-e-white/\"\n          className={`${iconClass} mx-16`}\n        >\n          <FontAwesomeIcon icon={faLinkedin} />\n        </a>\n        <a rel=\"noreferrer\" target=\"_blank\" href=\"https://twitter.com/jacobwhitedev\" className={iconClass}>\n          <FontAwesomeIcon icon={faTwitter} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Intro from \"./components/Intro\";\nimport FindKey from \"./components/FindKey\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div id=\"masterContainer\" className=\"bg-gray-800\">\n      <Header />\n      <Intro />\n      <FindKey />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}